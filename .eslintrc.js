module.exports = {
  env: {
    browser: true,
    jest: true,
    node: true,
  },
  extends: [
    'airbnb-typescript',
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:array-func/all',
    'plugin:jest/recommended',
    'plugin:jest/style',
    'plugin:promise/recommended',
    'plugin:radar/recommended',
    'plugin:react-hooks/recommended',
    'plugin:react/recommended',
    'plugin:regexp/recommended',
    'plugin:unicorn/recommended',
    'prettier',
  ],
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      rules: {},
    },
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.eslint.json',
  },
  plugins: [
    '@typescript-eslint',
    'array-func',
    'const-case',
    'functional',
    'import',
    'jest-async',
    'jest',
    'no-secrets',
    'promise',
    'radar',
    'react-hooks',
    'react',
    'regexp',
    'sort-keys-fix',
    'unicorn',
  ],
  root: true,
  rules: {
    '@typescript-eslint/array-type': ['error', { default: 'array-simple' }],
    '@typescript-eslint/await-thenable': 'warn',
    '@typescript-eslint/ban-ts-comment': 'warn',
    '@typescript-eslint/brace-style': 'error',
    '@typescript-eslint/class-literal-property-style': 'error',
    '@typescript-eslint/comma-dangle': ['error', 'always-multiline'],
    '@typescript-eslint/comma-spacing': 'error',
    '@typescript-eslint/consistent-indexed-object-style': 'error',
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
    '@typescript-eslint/consistent-type-imports': 'error',
    '@typescript-eslint/default-param-last': 'error',
    '@typescript-eslint/dot-notation': ['error', { allowKeywords: false }],
    '@typescript-eslint/explicit-module-boundary-types': 'error',
    '@typescript-eslint/func-call-spacing': 'error',
    '@typescript-eslint/keyword-spacing': 'error',
    '@typescript-eslint/lines-between-class-members': 'error',
    '@typescript-eslint/member-delimiter-style': 'error',
    '@typescript-eslint/naming-convention': 'error',
    'brace-style': 'off',
    'comma-dangle': 'off',
    'comma-spacing': 'off',
    'const-case/uppercase': 'error',
    'default-param-last': 'off',
    'dot-notation': 'off',
    'func-call-spacing': 'off',
    'functional/immutable-data': [
      'error',
      {
        ignorePattern: ['^mutable', '^module.exports'],
      },
    ],
    'import/no-default-export': 'error',
    'import/no-self-import': 'error',
    'import/order': [
      'error',
      {
        alphabetize: {
          caseInsensitive: true,
          order: 'asc',
        },
        groups: ['builtin', 'external', 'parent', 'sibling'],
        'newlines-between': 'always',
      },
    ],
    'import/prefer-default-export': 'off',
    'jest-async/expect-return': 'error',
    'keyword-spacing': 'off',
    'lines-between-class-members': 'off',
    'no-restricted-syntax': 'off',
    'no-secrets/no-secrets': 'error',
    'prefer-destructuring': [
      'error',
      {
        array: false,
        object: true,
      },
    ],
    'sort-keys-fix/sort-keys-fix': 'warn',
    'unicorn/catch-error-name': [
      'error',
      {
        ignore: [/[Ee]rror$/],
      },
    ],
    'unicorn/custom-error-definition': 'error',
    'unicorn/import-style': 'off',
    'unicorn/no-array-callback-reference': 'off',
    'unicorn/no-array-reduce': 'off',
    'unicorn/no-new-array': 'off',
    'unicorn/no-unsafe-regex': 'error',
    'unicorn/no-unused-properties': 'error',
    'unicorn/no-useless-undefined': 'off',
    'unicorn/numeric-separators-style': 'error',
    'unicorn/prefer-array-flat': 'error',
    'unicorn/prefer-array-flat-map': 'error',
    'unicorn/prefer-reflect-apply': 'off',
    'unicorn/prefer-string-slice': 'off',
    'unicorn/prevent-abbreviations': 'off',
  },
};
